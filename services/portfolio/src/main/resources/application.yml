server:
  port: 8082

spring:
  application:
    name: portfolio-service
  
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/stock-analytics}
      database: stock-analytics
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: portfolio-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: orderExecuted:com.stockanalytics.portfolio.model.OrderExecuted
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: portfolioUpdate:com.stockanalytics.portfolio.model.PortfolioUpdate

# Kafka Topics
kafka:
  topic:
    orders:
      executed: orders.executed
    portfolio:
      updates: portfolio.updates

# Logging
logging:
  level:
    com.stockanalytics.portfolio: INFO
    org.springframework.kafka: INFO
    org.springframework.data.mongodb: INFO
    org.springframework.data.redis: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Profiles
---
spring:
  config:
    activate:
      on-profile: docker
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS_DOCKER:redpanda:9092}
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://host.docker.internal:27017/stock-analytics}
    redis:
      host: ${REDIS_HOST_DOCKER:redis}
      port: ${REDIS_PORT_DOCKER:6379}
